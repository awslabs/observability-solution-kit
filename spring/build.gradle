plugins {
    id 'java-library'
    id 'org.springframework.boot' version '2.7.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE' apply false
    id 'maven-publish'
    id 'jacoco'
    id 'signing'
}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'java-library'
apply plugin: 'org.gradle.java'

group = 'org.ollyv'
version = '0.0.2'
java.sourceCompatibility = JavaVersion.VERSION_11

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

allprojects {
    repositories {
        mavenCentral()
        jcenter()
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = "$group"
            artifactId = 'spring'
            version = "$version"
            from components.java

            pom {
                name = 'The Observability SDK'
                description = 'Ollyv features a robust Centralized Logging Architecture, ensuring seamless application across multiple accounts and regions while guaranteeing optimal performance'
                url = 'https://github.com/awslabs/observability-solution-kit'
                licenses {
                    license {
                        name = 'Apache License, Version 2.0'
                        url = 'https://aws.amazon.com/apache2.0'
                    }
                }
                developers {
                    developer {
                        id = 'kmhak'
                        name = 'HakSung Kim'
                        email = 'twoday.me@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/awslabs/observability-solution-kit'
                    developerConnection = 'scm:git:ssh://github.com/awslabs/observability-solution-kit'
                    url = 'https://github.com/awslabs/observability-solution-kit'
                }
            }
        }
    }
    repositories {
        maven {
            url = uri("https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/")
            credentials {
                username = project.property('ossrhUsername')
                password = project.property('ossrhPassword')
            }
        }
    }
}

bootJar.enabled = false
jar.enabled = true

dependencies {
    implementation("org.springframework.boot:spring-boot-starter-web:2.7.5")
    implementation("org.springframework.cloud:spring-cloud-starter-aws-messaging:2.2.6.RELEASE")
    compileOnly("org.projectlombok:lombok:1.18.24")
    annotationProcessor("org.projectlombok:lombok:1.18.24")

    api("ch.qos.logback.contrib:logback-json-classic:0.1.5")
    api("ch.qos.logback.contrib:logback-jackson:0.1.5")
    implementation("org.springframework.boot:spring-boot-autoconfigure-processor:2.7.5")
    implementation("org.springframework.boot:spring-boot-autoconfigure:2.7.5")
    annotationProcessor("org.springframework.boot:spring-boot-configuration-processor:2.7.5")


    implementation 'com.amazonaws:aws-xray-recorder-sdk-core:2.14.0'

    testImplementation("org.apache.groovy:groovy:4.0.0")
    testImplementation("org.spockframework:spock-core:2.3-groovy-4.0")
}

test {
    useJUnitPlatform()
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.enabled true
        html.enabled true
    }
}

tasks.named('compileJava') {
    inputs.files(tasks.named('processResources'))
}

javadoc {
    source = "${projectDir}/src/main"
    exclude "resources/**"
    title = "5kSaaS Javadoc"
    options.locale = "en"
    options.charSet = "UTF-8"
    options.encoding = "UTF-8"
    options.bottom = "5kSaaS Javadoc, Made with FIVE KIMS"
    options.addStringOption('Xdoclint:none', '-quiet')
    options.destinationDirectory = new File(projectDir, "/docs/jdk8")
}

signing {
    sign publishing.publications.mavenJava
}
